{"version":3,"sources":["components/contactItem/ContactItem.module.css","components/logo/Logo.module.css","components/App.module.css","components/contactForm/ContactForm.module.css","redux/theme/themeActionTypes.js","redux/theme/themeActions.js","service/themeConfig.js","components/logo/Logo.js","redux/contacts/contactsActionTypes.js","redux/contacts/contactsActions.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactItem/ContactItem.js","components/contactList/ContactList.js","components/App.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js","components/contactList/ContactList.module.css"],"names":["module","exports","changeTheme","theme","type","ActionTypes","payload","themeConfig","light","headerBg","fontColor","bodybg","dark","logoStyles","appear","styles","appearActive","Logo","CSSTransition","in","timeout","classNames","unmountOnExit","addContact","name","number","contactsActionTypes","contact","id","uuid","removeContact","contactId","changeFilter","filter","showAlert","message","ContactForm","state","changeHandler","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","contactForm","style","borderRadius","onChange","marginBottom","padding","Component","connect","contactsActions","mapDispatchToProps","onChangeFilter","contacts","ContactItem","onRemoveContact","listItem","listItemP","listItemButton","onClick","itemMove","enter","enterActive","exit","exitActive","items","toLowerCase","includes","TransitionGroup","component","map","key","toggleTheme","themeActions","color","background","length","sectionTitle","combineReducers","actionTypes","find","alert","themeReducer","rootReducer","contactsReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd631afa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__3f088\",\"listItemP\":\"ContactItem_listItemP__1iXL6\",\"listItemButton\":\"ContactItem_listItemButton__GfBuj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1dYmj\",\"appear\":\"Logo_appear__3Do0I\",\"appearActive\":\"Logo_appearActive__xyfGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__1RDJA\",\"light\":\"App_light__3_jEz\",\"dark\":\"App_dark__2CyWc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1u45N\"};","const CHANGE_THEME = 'theme/changeTheme';\r\n\r\nexport default {\r\n  CHANGE_THEME,\r\n};\r\n","import ActionTypes from './themeActionTypes';\r\n\r\nconst changeTheme = theme => ({\r\n  type: ActionTypes.CHANGE_THEME,\r\n  payload: {\r\n    theme,\r\n  },\r\n});\r\n\r\nexport default { changeTheme };\r\n","const themeConfig = {\r\n  light: {\r\n    headerBg: '#F7B30C',\r\n    fontColor: 'black',\r\n    bodybg: 'white',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default themeConfig;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","const ADD = 'contacts/add';\r\nconst REMOVE = 'contacts/remove';\r\nconst CHANGE_FILTER = 'contacts/changeFilter';\r\nconst ALERT_SHOW = 'alert/show';\r\n\r\nexport default {\r\n  ADD,\r\n  REMOVE,\r\n  CHANGE_FILTER,\r\n  ALERT_SHOW,\r\n};\r\n","import { v4 as uuid } from 'uuid';\r\nimport contactsActionTypes from './contactsActionTypes';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: contactsActionTypes.ADD,\r\n  payload: {\r\n    contact: { id: uuid(), name: name, number: number },\r\n  },\r\n});\r\n\r\nconst removeContact = contactId => ({\r\n  type: contactsActionTypes.REMOVE,\r\n  payload: {\r\n    id: contactId,\r\n  },\r\n});\r\n\r\nconst changeFilter = filter => ({\r\n  type: contactsActionTypes.CHANGE_FILTER,\r\n  payload: {\r\n    filter,\r\n  },\r\n});\r\n\r\nconst showAlert = message => ({\r\n  type: contactsActionTypes.ALERT_SHOW,\r\n  payload: {\r\n    message,\r\n  },\r\n});\r\n\r\nexport default { addContact, removeContact, changeFilter, showAlert };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeHandler = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            style={{ borderRadius: 4 }}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            style={{ borderRadius: 4, marginBottom: 5 }}\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button style={{ borderRadius: 4, padding: 4 }} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  onSubmit: contactsActions.addContact,\r\n})(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <form>\r\n    <label>\r\n      Find contacts by name\r\n      <br />\r\n      <input\r\n        style={{ borderRadius: 4 }}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      ></input>\r\n    </label>\r\n  </form>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    value: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport styles from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ contact: { id, name, number }, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.listItemP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.listItemButton}\r\n        onClick={() => onRemoveContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from './ContactList.module.css';\r\nimport ContactItem from '../contactItem/ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst itemMove = {\r\n  enter: styles.enter,\r\n  enterActive: styles.enterActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts &&\r\n        contacts.map(contact => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames={itemMove}>\r\n            <ContactItem\r\n              contact={contact}\r\n              onRemoveContact={() => onRemoveContact(contact.id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.items.filter(contact =>\r\n    contact.name.toLowerCase().includes(contacts.filter.toLowerCase()),\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsActions.removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport themeActions from '../redux/theme/themeActions';\r\nimport themeConfig from '../service/themeConfig';\r\nimport styles from './App.module.css';\r\nimport Logo from './logo/Logo';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport Filter from './filter/Filter';\r\nimport ContactList from './contactList/ContactList';\r\n\r\nconst App = ({ contacts, theme, toggleTheme }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeConfig[theme].fontColor,\r\n        background: themeConfig[theme].bodybg,\r\n      }}\r\n    >\r\n      <Logo />\r\n      <button onClick={toggleTheme}>Change theme</button>\r\n      <ContactForm />\r\n      {contacts && contacts.length > 1 && <Filter />}\r\n      <h2 className={styles.sectionTitle}>Contacts</h2>\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    theme: state.theme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleTheme: themeActions.changeTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport actionTypes from './contactsActionTypes';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      if (\r\n        state &&\r\n        state.find(contact => payload.contact.name === contact.name)\r\n      ) {\r\n        alert('User with this name is already exist');\r\n        return state;\r\n      } else {\r\n        return [...state, payload.contact];\r\n      }\r\n\r\n    case actionTypes.REMOVE:\r\n      return state.filter(contact => contact.id !== payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// if (contacts && contacts.find(contact => name === contact.name)) {\r\n//       this.showAlert(`${contact.name} already exists`);\r\n//     } else {\r\n//       this.setState(prevState => {\r\n//         return {\r\n//           contacts: [...prevState.contacts, contact],\r\n//         };\r\n//       });\r\n//     }\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE_FILTER:\r\n      return payload.filter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import actionTypes from './themeActionTypes';\r\n\r\nconst themeReducer = (state = 'light', { type }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE_THEME:\r\n      if (state && state === 'light') {\r\n        return 'dark';\r\n      } else {\r\n        return 'light';\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default themeReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  theme: themeReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App';\r\n// import ThemeContext from './contexts/ThemeContext';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__3UXiz\",\"enterActive\":\"ContactList_enterActive__1Qq2m\",\"exit\":\"ContactList_exit__11bec\",\"exitActive\":\"ContactList_exitActive__l7h9M\"};"],"sourceRoot":""}